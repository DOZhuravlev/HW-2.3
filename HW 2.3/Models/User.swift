//
//  User.swift
//  HW 2.3
//
//  Created by Zdrenko Zigich on 07.04.2022.
//

struct User {
    let username: String
    let password: String
    let people: [Person]
    
    static func getUser() -> [User] {
        [
            User(
                username: "User",
                password: "Password",
                people: [
                    Person(
                        name: .vanya,
                        nickName: .kuka,
                        position: .forward,
                        workingLeg: .right,
                        favoriteDrink: .water,
                        aboutPlayer: .aboutKuka
                    ),
                    Person(
                        name: .denis,
                        nickName: .dan,
                        position: .saidForward,
                        workingLeg: .right,
                        favoriteDrink: .notWater,
                        aboutPlayer: .aboutKuka
                    )
                ]
            )
        ]
    }
}

struct Person {
    let name: NamePlayer
    let nickName: SecondNamePlayer
    let position: Position
    let workingLeg: Leg
    let favoriteDrink: Drink
    let aboutPlayer: AboutPlayerSaid
}

enum NamePlayer: String {
    case vanya = "–í–∞–Ω—è"
    case denis = "–î–µ–Ω–∏—Å"
}

enum SecondNamePlayer: String {
    case kuka = "–ö—É–∫–∞"
    case dan = "–î—ç–Ω—á–∏–∫"
}

enum Position: String {
    case forward = "–ù–∞–ø–∞–¥–∞—é—â–∏–π"
    case saidForward = "–ì–æ–≤–æ—Ä–∏—Ç —á—Ç–æ –ù–∞–ø–∞–¥–∞—é—â–∏–π"
}

enum Leg: String {
    case left = "–õ–µ–≤–∞—è"
    case right = "–ü—Ä–∞–≤–∞—è"
}

enum Drink: String {
    case water = "–í–æ–¥–∞ –∏ üçº"
    case notWater = "–ù–µ –≤–æ–¥–∞ ü•Éü§™"
}

enum AboutPlayerSaid: String {
    case aboutKuka = "–ì–æ–ª–µ–æ–¥–æ—Ä, –º–Ω–æ–≥–æ –∑–∞–±–∏–≤–∞–µ—Ç –∏ –Ω–µ –∑–∞–±–∏–≤–∞–µ—Ç –µ—â–µ –±–æ–ª—å—à–µ, –∏–≥—Ä–∞ –≥–æ–ª–æ–≤–æ–π –ª—É—á—à–∞—è –≤ –∫–æ–º–∞–Ω–¥–µ, –¥–∞–∂–µ –∏–Ω–æ–≥–¥–∞ –æ—Ç —É–¥–∞—Ä–æ–≤ –≥–æ–ª–æ–≤–æ–π —Å–æ–ø–µ—Ä–Ω–∏–∫–∏ —Å—Ç—Ä–∞–¥–∞—é—Çü§º‚Äç‚ôÇÔ∏è, —Å–ª–æ–≥–∞–Ω: <–ë–∏–ª, –±—å—é –∏ –±—É–¥—É –±–∏—Ç—å‚öΩÔ∏è>"
    case aboutDan = "–°–∫–∞–∑–∞–ª —á—Ç–æ –Ω–∞–ø–∞–¥–∞—é—â–∏–π, –Ω–æ –≥–æ–ª—ã –Ω–µ –≥–ª–∞–≤–Ω–æ–µ, –ø–æ—ç—Ç–æ–º—É –æ—Å–æ–±–æ –Ω–µ –∑–∞–±–∏–≤–∞–µ—Ç. –ó–æ–ª–æ—Ç—ã–µ —Å–ª–æ–≤–∞ –Ω–∞–ø–∞–¥–∞—é—â–µ–≥–æ –°–∏—Å—Ç–µ–º—ã: <–ó–∞—á–µ–º –±–µ–∂–∞—Ç—å –≤–ø–µ—Ä–µ–¥, –µ—Å–ª–∏ –Ω–∞–¥–æ –±—É–¥–µ—Ç –±–µ–∂–∞—Ç—å –Ω–∞–∑–∞–¥> –∞ —Ç–∞–∫–∂–µ: <–ü–∏–ª, –ø—å—é –∏ –±—É–¥—É –ø–∏—Ç—åüòÅüç∫>"
    case egor = "–ì–æ–≤–æ—Ä–∏—Ç —á—Ç–æ —Ñ–∞–Ω–∞—Ç –ò–≤–∞–Ω–∞ –ö—É–∫–∞—Ä—Å–∫–∏—Ö, –∏–∑—É—á–∞–µ—Ç –µ–≥–æ —Å—Ç–∏–ª—å –∏–≥—Ä—ã –∏ –ø—Ä–∏–º–µ–Ω—è–µ—Ç –Ω–∞ –ø—Ä–∞–∫—Ç–∏–∫–µ, –Ω–µ —Å–ª—É—à–∞–µ—Ç –ø–∞—Ä—Ç–Ω–µ—Ä–æ–≤ –ø–æ –∫–æ–º–∞–Ω–¥–µ, –ø–∞—Å—ã –æ—Ç–¥–∞–µ—Ç –Ω–µ–æ—Ö–æ—Ç–Ω–æ, –ø—Ä—è–º —Ä–µ–∞–ª—å–Ω–æ –ø—Ä–∏–º–µ–Ω—è–µ—Ç —Å—Ç–∏–ª—å –∏–≥—Ä—ã –ò–≤–∞–Ω–∞"
    case belyak = "–õ—É—á—à–∏–π –≤—Ä–∞—Ç–∞—Ä—å –∏ –ª—É—á—à–∏–π —Ç—Ä–µ–Ω–µ—Ä, –µ—Å–ª–∏ —á—Ç–æ, —Ç–æ —ç—Ç–æ –æ–Ω —Å–∫–∞–∑–∞–ª —Ç–∞–∫ —É–∫–∞–∑–∞—Ç—å "
}
